// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "MaomaoZGW",
            "url": "https://github.com/maomaozgw",
            "email": "maomaozgw@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/imports": {
            "post": {
                "description": "Create Import Request to import filament/color/brand/type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Import"
                ],
                "summary": "Create Import Request",
                "parameters": [
                    {
                        "description": "Import Data",
                        "name": "import-data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.ImportData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ItemResponse-v1_ImportData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/meta-data/brands": {
            "get": {
                "description": "List brands with filter and pagenation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MetaData"
                ],
                "summary": "List Brand",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer",
                        "description": "Page Size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Brand Name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListResponse-model_Brand"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MetaData"
                ],
                "summary": "Create Brand",
                "parameters": [
                    {
                        "description": "Brand",
                        "name": "brand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Brand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ItemResponse-model_Brand"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/meta-data/brands/{id}": {
            "put": {
                "description": "Update brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MetaData"
                ],
                "summary": "Update Brand",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Brand",
                        "name": "brand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Brand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ItemResponse-model_Brand"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/meta-data/colors": {
            "get": {
                "description": "get all colors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MetaData"
                ],
                "summary": "List All Colors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListResponse-model_Color"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Color",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MetaData"
                ],
                "summary": "Create Color",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ItemResponse-model_Color"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/meta-data/colors/{id}": {
            "put": {
                "description": "Update Color only allow to update name or rgba setting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MetaData"
                ],
                "summary": "Update Color",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ItemResponse-model_Color"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/meta-data/types": {
            "get": {
                "description": "get types by filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MetaData"
                ],
                "summary": "List Types with filter and page",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer",
                        "description": "Page Size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filament Type",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filament Major Type",
                        "name": "major",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filament Minor Type",
                        "name": "minor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListResponse-model_Type"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MetaData"
                ],
                "summary": "Create Type",
                "parameters": [
                    {
                        "description": "Type",
                        "name": "type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ItemResponse-model_Type"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/meta-data/types/{id}": {
            "put": {
                "description": "Update type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MetaData"
                ],
                "summary": "Update Type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Type",
                        "name": "type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ItemResponse-model_Type"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/warehouse/filaments": {
            "get": {
                "description": "get filaments by filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "List Filament with filter and pagen",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filament Brand Name",
                        "name": "brand",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filament Color Name",
                        "name": "color",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filament Type Name",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListResponse-model_Filament"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "stock in filament, add/increase filament to warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "Stock in Filament",
                "parameters": [
                    {
                        "description": "Filament",
                        "name": "filament",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Filament"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ItemResponse-model_Filament"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/warehouse/filaments/{id}": {
            "get": {
                "description": "get filament by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "Get Filament by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filament ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ItemResponse-model_Filament"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Stock take Filament\nstock take filament, update filament quantity in warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filament ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Filament",
                        "name": "filament",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Filament"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ItemResponse-model_Filament"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "stock out filament, decrease filament from warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "Stock out Filament",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filament ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Filament",
                        "name": "filament",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Filament"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ItemResponse-model_Filament"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/warehouse/records": {
            "get": {
                "description": "get records by filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "List Records with filter and page",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 10,
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filament Brand Name",
                        "name": "brand",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filament Color Name",
                        "name": "color",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filament Type Name",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListResponse-model_Record"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/meta-data": {
            "get": {
                "description": "Get Global Metadata, including colors, brands, and types.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MetaData"
                ],
                "summary": "Get all metadata",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ItemResponse-v1_metaData"
                        }
                    }
                }
            }
        },
        "/v1/warehouse/statistic": {
            "get": {
                "description": "Get all statistics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warehouse"
                ],
                "summary": "Get all statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ListResponse-model_Statistic"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.ItemResponse-model_Brand": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.Brand"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.ItemResponse-model_Color": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.Color"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.ItemResponse-model_Filament": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.Filament"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.ItemResponse-model_Type": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.Type"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.ItemResponse-v1_ImportData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/v1.ImportData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.ItemResponse-v1_metaData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/v1.metaData"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "api.ListResponse-model_Brand": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Brand"
                    }
                },
                "message": {
                    "type": "string"
                },
                "pager": {
                    "$ref": "#/definitions/api.Pager"
                }
            }
        },
        "api.ListResponse-model_Color": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Color"
                    }
                },
                "message": {
                    "type": "string"
                },
                "pager": {
                    "$ref": "#/definitions/api.Pager"
                }
            }
        },
        "api.ListResponse-model_Filament": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Filament"
                    }
                },
                "message": {
                    "type": "string"
                },
                "pager": {
                    "$ref": "#/definitions/api.Pager"
                }
            }
        },
        "api.ListResponse-model_Record": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Record"
                    }
                },
                "message": {
                    "type": "string"
                },
                "pager": {
                    "$ref": "#/definitions/api.Pager"
                }
            }
        },
        "api.ListResponse-model_Statistic": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Statistic"
                    }
                },
                "message": {
                    "type": "string"
                },
                "pager": {
                    "$ref": "#/definitions/api.Pager"
                }
            }
        },
        "api.ListResponse-model_Type": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Type"
                    }
                },
                "message": {
                    "type": "string"
                },
                "pager": {
                    "$ref": "#/definitions/api.Pager"
                }
            }
        },
        "api.Pager": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "model.Brand": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Color": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rgba": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Filament": {
            "type": "object",
            "properties": {
                "brand": {
                    "$ref": "#/definitions/model.Brand"
                },
                "brand_id": {
                    "type": "integer"
                },
                "color": {
                    "$ref": "#/definitions/model.Color"
                },
                "color_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/model.Type"
                },
                "type_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Record": {
            "type": "object",
            "properties": {
                "brand": {
                    "$ref": "#/definitions/model.Brand"
                },
                "brand_id": {
                    "type": "integer"
                },
                "color": {
                    "$ref": "#/definitions/model.Color"
                },
                "color_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "kind": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/model.Type"
                },
                "type_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Statistic": {
            "type": "object",
            "properties": {
                "kind": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StatisticValue"
                    }
                }
            }
        },
        "model.StatisticValue": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StatisticValue"
                    }
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "model.Type": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "type": "string"
                },
                "minor": {
                    "type": "string"
                },
                "name": {
                    "description": "ignore all, just generated by major-minor",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "v1.ImportData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "v1.metaData": {
            "type": "object",
            "properties": {
                "brands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Brand"
                    }
                },
                "colors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Color"
                    }
                },
                "types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Type"
                    }
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Filament Management API",
	Description:      "This is a web server for 3d printer filament management.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
